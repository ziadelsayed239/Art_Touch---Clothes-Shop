@model List<DAL.Data.Models.Category>
@{
    ViewData["Title"] = "Categories Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Categories Management</h3>
                    <div class="card-tools">
                        
                        <a href="@Url.Action("CreateCategory", "Admin")" class="btn btn-success">
                            <i class="fas fa-plus"></i> Add Category
                        </a>
                        <a href="@Url.Action("Dashboard", "Admin")" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to Dashboard
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    @if (!Model.Any())
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-tags fa-3x text-muted mb-3"></i>
                            <h4 class="text-muted">No categories found</h4>
                            <p class="text-muted">Create your first category to organize products.</p>
                            <button class="btn btn-primary" onclick="showAddCategoryModal()">
                                <i class="fas fa-plus"></i> Add First Category
                            </button>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Image</th> <!-- ? New column -->
                                        <th>Name</th>
                                        <th>Description</th>
                                        <th>Products Count</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var category in Model)
                                    {
                                        <tr>
                                            <td>@category.Id</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(category.ImageUrl))
                                                {
                                                    <img src="@category.ImageUrl" alt="Category Image" style="width: 80px; height: auto; border-radius: 5px;" />
                                                }
                                                else
                                                {
                                                    <span class="text-muted">No image</span>
                                                }
                                            </td>
                                            <td>@category.Name</td>
                                            <td>@category.Description</td>
                                            <td>@category.Products?.Count</td>
                                            <td>
                                                <span class="badge badge-@(category.IsActive ? "success" : "danger")">
                                                    @(category.IsActive ? "Active" : "Inactive")
                                                </span>
                                            </td>
                                            <td>
                                                <a class="btn btn-sm btn-info" asp-controller="Admin" asp-action="EditCategory" asp-route-id="@category.Id">
                                                    <i class="fas fa-edit"></i> Edit
                                                </a>

                                                <button class="btn btn-sm btn-@(category.IsActive ? "warning" : "success")" onclick="toggleCategoryStatus(@category.Id, @category.IsActive.ToString().ToLower())">
                                                    <i class="fas fa-@(category.IsActive ? "pause" : "play")"></i> @(category.IsActive ? "Deactivate" : "Activate")
                                                </button>
                                                <button class="btn btn-sm btn-danger" onclick="deleteCategory(@category.Id, '@category.Name')">
                                                    <i class="fas fa-trash"></i> Delete
                                                </button>


                                            </td><a href="a:\ziad\freelance proj\art_touch-master\art_touch\views\admin\categories.cshtml">a:\ziad\freelance proj\art_touch-master\art_touch\views\admin\categories.cshtml</a>
                                        </tr>
                                    }
                                </tbody>
                            </table>

                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Category Modal -->
<div class="modal fade" id="addCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addCategoryForm">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="categoryName">Category Name</label>
                        <input type="text" class="form-control" id="categoryName" name="Name" required>
                    </div>
                    <div class="form-group">
                        <label for="categoryDescription">Description</label>
                        <textarea class="form-control" id="categoryDescription" name="Description" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Category</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Category Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editCategoryForm">
                <div class="modal-body">
                    <input type="hidden" id="editCategoryId" name="Id">
                    <div class="form-group">
                        <label for="editCategoryName">Category Name</label>
                        <input type="text" class="form-control" id="editCategoryName" name="Name" required>
                    </div>
                    <div class="form-group">
                        <label for="editCategoryDescription">Description</label>
                        <textarea class="form-control" id="editCategoryDescription" name="Description" rows="3"></textarea>
                    </div>
                    <div class="form-group">
                        <div class="custom-control custom-switch">
                            <input type="checkbox" class="custom-control-input" id="editCategoryActive" name="IsActive">
                            <label class="custom-control-label" for="editCategoryActive">Active</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update Category</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
// Show Add Category Modal
function showAddCategoryModal() {
    // Clear form
    document.getElementById('addCategoryForm').reset();
    // Show modal using Bootstrap 5 syntax
    var modal = new bootstrap.Modal(document.getElementById('addCategoryModal'));
    modal.show();
}

// Add Category
document.getElementById('addCategoryForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const data = Object.fromEntries(formData);
    
    fetch('/Admin/AddCategory', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            location.reload();
        } else {
            alert('Error adding category: ' + data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Error adding category');
    });
});

// Edit Category
function editCategory(id, name, description, isActive) {
    document.getElementById('editCategoryId').value = id;
    document.getElementById('editCategoryName').value = name;
    document.getElementById('editCategoryDescription').value = description;
    document.getElementById('editCategoryActive').checked = isActive === 'true';
    
    var modal = new bootstrap.Modal(document.getElementById('editCategoryModal'));
    modal.show();
}

document.getElementById('editCategoryForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const data = Object.fromEntries(formData);
    data.IsActive = document.getElementById('editCategoryActive').checked;
    
    fetch('/Admin/UpdateCategory', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            location.reload();
        } else {
            alert('Error updating category: ' + data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Error updating category');
    });
});

// Toggle Category Status
function toggleCategoryStatus(id, currentStatus) {
    const newStatus = currentStatus === 'true' ? false : true;
    const action = newStatus ? 'activate' : 'deactivate';
    
    if (confirm(`Are you sure you want to ${action} this category?`)) {
        fetch('/Admin/ToggleCategoryStatus', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: `categoryId=${id}&isActive=${newStatus}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload();
            } else {
                alert('Error updating category status');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error updating category status');
        });
    }
}

// Delete Category
function deleteCategory(id, name) {
    if (confirm(`Are you sure you want to delete the category "${name}"? This action cannot be undone.`)) {
        fetch('/Admin/DeleteCategory', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: `categoryId=${id}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload();
            } else {
                alert('Error deleting category: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error deleting category');
        });
    }
}
</script> 